diff -urN kmess-2.0.6.2/contrib/isf-qt/src/isfqt.cpp kmess-2.0.6.2-patched/contrib/isf-qt/src/isfqt.cpp
--- kmess-2.0.6.2/contrib/isf-qt/src/isfqt.cpp	2012-02-19 03:28:01.000000000 +1100
+++ kmess-2.0.6.2-patched/contrib/isf-qt/src/isfqt.cpp	2014-05-29 15:57:09.259240861 +1100
@@ -484,12 +484,17 @@
   int             width     = isfImage.width();
   int             numColors = 0;
   bool            gifError  = true;
+  int             gifErrCode;
 
   // Convert the image to GIF using libgif
 
   // Open the gif file
   gifData.open( QIODevice::WriteOnly );
+#if GIFLIB_MAJOR >= 5
+  gifImage = EGifOpen( (void*)&gifData, GifWriteToByteArray, &gifErrCode );
+#else
   gifImage = EGifOpen( (void*)&gifData, GifWriteToByteArray );
+#endif
   if( gifImage == 0 )
   {
     qWarning() << "Couldn't initialize gif library!";
@@ -503,7 +508,11 @@
     numColors = 256;
   }
 
+#if GIFLIB_MAJOR >= 5
+  cmap = GifMakeMapObject( numColors, NULL );
+#else
   cmap = MakeMapObject( numColors, NULL );
+#endif
   if( cmap == 0 && isfImage.numColors() > 1 )
   {
     qWarning() << "Couldn't create map object for gif conversion (colors:" << isfImage.numColors() << ")!";
@@ -576,11 +585,19 @@
   else
   {
     // Write the extension
+#if GIFLIB_MAJOR >= 5
+    if( EGifPutExtensionLeader( gifImage, COMMENT_EXT_FUNC_CODE) == GIF_ERROR )
+    {
+      qWarning() << "EGifPutExtensionLeader failed!";
+      goto writeError;
+    }
+#else
     if( EGifPutExtensionFirst( gifImage, COMMENT_EXT_FUNC_CODE, MAX_GIF_BYTE, isfData.left( MAX_GIF_BYTE ).data() ) == GIF_ERROR )
     {
       qWarning() << "EGifPutExtensionFirst failed!";
       goto writeError;
     }
+#endif
 
     // The first MAX_GIF_BYTE bytes have been written already
     quint32 pos = MAX_GIF_BYTE;
@@ -590,11 +607,19 @@
     // Write all the full data blocks
     while( length >= MAX_GIF_BYTE )
     {
+#if GIFLIB_MAJOR >= 5
+      if( EGifPutExtensionBlock( gifImage, MAX_GIF_BYTE, isfData.mid( pos, MAX_GIF_BYTE ).data() ) == GIF_ERROR )
+      {
+        qWarning() << "EGifPutExtensionBlock failed!";
+        goto writeError;
+      }
+#else
       if( EGifPutExtensionNext( gifImage, 0, MAX_GIF_BYTE, isfData.mid( pos, MAX_GIF_BYTE ).data() ) == GIF_ERROR )
       {
         qWarning() << "EGifPutExtensionNext failed!";
         goto writeError;
       }
+#endif
 
       pos += MAX_GIF_BYTE;
       length -= MAX_GIF_BYTE;
@@ -603,19 +628,35 @@
     // Write the last block
     if( length > 0 )
     {
+#if GIFLIB_MAJOR >= 5
+      if( EGifPutExtensionTrailer( gifImage ) == GIF_ERROR )
+      {
+        qWarning() << "EGifPutExtensionTrailer (n) failed!";
+        goto writeError;
+      }
+#else
       if( EGifPutExtensionLast( gifImage, 0, length, isfData.mid( pos, MAX_GIF_BYTE ).data() ) == GIF_ERROR )
       {
         qWarning() << "EGifPutExtensionLast (n) failed!";
         goto writeError;
       }
+#endif
     }
     else
     {
+#if GIFLIB_MAJOR >= 5
+      if( EGifPutExtensionTrailer( gifImage ) == GIF_ERROR )
+      {
+        qWarning() << "EGifPutExtensionTrailer (0) failed!";
+        goto writeError;
+      }
+#else
       if( EGifPutExtensionLast( gifImage, 0, 0, 0 ) == GIF_ERROR )
       {
         qWarning() << "EGifPutExtensionLast (0) failed!";
         goto writeError;
       }
+#endif
     }
   }
 
@@ -623,13 +664,25 @@
 
 writeError:
   // Clean up the GIF converter etc
+#if GIFLIB_MAJOR * 100 + GIFLIB_MINOR >= 501
+  EGifCloseFile( gifImage, NULL );
+#else
   EGifCloseFile( gifImage );
+#endif
+#if GIFLIB_MAJOR >= 5
+  GifFreeMapObject( cmap );
+#else
   FreeMapObject( cmap );
+#endif
   gifData.close();
 
   if( gifError )
   {
+#if GIFLIB_MAJOR >= 5
+    qWarning() << "GIF error code:" << GifErrorString(gifErrCode);
+#else
     qWarning() << "GIF error code:" << GifLastError();
+#endif
   }
   else
   {
